{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ENPH 213 - Week 7 Lab\n",
    "\n",
    "In this lab, we will be working on Discrete Fourier Transforms and continuing to develop your Python skills.\n",
    "\n",
    "When you are finished, please rename this notebook to LastName_ENPH213_Lab7, where LastName is your last name.  Submit that file to onQ.\n",
    "\n",
    "For marking Parts 1-4 will be marked together (Weighted out of 10)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 1\n",
    "\n",
    "Create two windowing functions.\n",
    "\n",
    "The first is a Trapezoidal Window function $trapWindow(x)$ that rises in the first 10% and falls in the final 10% of the points.  It should be at its maximum value for all points in between.\n",
    "\n",
    "The second function is $sineWindow(x)$ that uses the first lobe of a sine wave (from 0 to $\\pi$).\n",
    "\n",
    "Both of these window functions should accomodate an input data set with an arbitrary, even number of points.  \n",
    "\n",
    "Plot the functions for 50 points within the range of $-1 \\leq x \\leq 1$.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "from matplotlib import pyplot as plt\n",
    "%matplotlib inline\n",
    "# Trapazoidal Window Function:\n",
    "x = np.linspace(-1, 1, 50)\n",
    "# function = np.ones_like(x) # returns an array of ones the same shape as given array\n",
    "def trapWindow(x):\n",
    "    WinTrap = np.zeros(x.size)\n",
    "    P_1 = x.size//10 # first 10%\n",
    "    P_2 = x.size - x.size // 10 # alast 10%\n",
    "    #maximum = x.size\n",
    "    for i in range(1, x.size-1):\n",
    "        if i <= P_1: # first 10% range\n",
    "            WinTrap[i] = i / P_1 # slope\n",
    "        elif i >= P_2: # last 10% range\n",
    "            WinTrap[i] = 1 + (P_2 - (i + 1)) / P_1 # slope\n",
    "        else: # flat top\n",
    "            WinTrap[i] = 1.0 # flat top\n",
    "    return WinTrap # return the function\n",
    "# sine window function\n",
    "def sineWindow(x): \n",
    "    return np.sin((np.pi*(x+1)/2))\n",
    "\n",
    "plt.plot(x, trapWindow(x))\n",
    "plt.show()\n",
    "plt.plot(x, sineWindow(x))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 2\n",
    "\n",
    "Create a data set of the linear funcion $f(t) = 2t$ with 30 regularly spaced points between  $-\\pi \\leq t \\leq \\pi$.  Manually set the first and last points to zero as a basic windowing protocol.  This creates a sawtooth function.\n",
    "\n",
    "Create a function $myDFT(t, y)$ that calculates and prints the $a_k$ and $b_k$ coefficients using the forms for discrete Fourier Transforms.  Once found, create a second function $plotFourier(t, ak, bk, omega)$ that returns the evaluated Fourier expansion and plots the Fourier series expansion using the Fourier coefficients as input.  Plot the function using 201 points in graph.\n",
    "\n",
    "Remember that when you remove the last point, your data set will have an odd number of points. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([-2.51327412e-01,  2.49747118e-01, -2.45026109e-01,  2.37223755e-01,\n",
       "        -2.26438174e-01,  2.12805002e-01, -1.96495683e-01,  1.77715318e-01,\n",
       "        -1.56700078e-01,  1.33714245e-01, -1.09046877e-01,  8.30081820e-02,\n",
       "        -5.59256105e-02,  2.81397420e-02,  4.06436427e-15, -2.81397420e-02,\n",
       "         5.59256105e-02, -8.30081820e-02,  1.09046877e-01, -1.33714245e-01,\n",
       "         1.56700078e-01, -1.77715318e-01,  1.96495683e-01, -2.12805002e-01,\n",
       "         2.26438174e-01]),\n",
       " array([ 0.        ,  2.1391633 , -1.0345828 ,  0.65170672, -0.45022956,\n",
       "         0.32238786, -0.23249787,  0.16545909, -0.11387932,  0.07378294,\n",
       "        -0.04289516,  0.01986411, -0.00387532, -0.00555071,  0.00866646,\n",
       "        -0.00555071, -0.00387532,  0.01986411, -0.04289516,  0.07378294,\n",
       "        -0.11387932,  0.16545909, -0.23249787,  0.32238786, -0.45022956]))"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# draw 2t from -pi to pi to create sawtooth function (will give a straight line)\n",
    "t = np.linspace(-np.pi, np.pi, 30)\n",
    "t = t[0:-1]\n",
    "y = 2*t\n",
    "\n",
    "plt.plot(t, y)\n",
    "\n",
    "def myDFT(t,y):\n",
    "    k_max = len(t)\n",
    "    T = t[-1] - t[0]\n",
    "    #print(T)\n",
    "    omega = 2 * np.pi / T\n",
    "    kmax = N // 2 # floor division\n",
    "    #print(kmax)\n",
    "\n",
    "    ak = np.zeros(kmax)\n",
    "    bk = np.zeros(kmax)\n",
    "\n",
    "    for k in range(0, kmax):\n",
    "        ak[k] = np.sum(y * np.cos(k*omega*t)) / kmax\n",
    "        bk[k] = np.inner(y, np.sin(k*omega*t)) / kmax\n",
    "    return ak, bk\n",
    "        \n",
    "def plotFourier(t, ak, bk, omega):\n",
    "    Fout = np.zeros(t.size)\n",
    "    Fout = Fout + ak[0]/2\n",
    "    for k in range(1, ak.size):\n",
    "        Fout = Fout + ak[k]*np.cos(k*omega*t) + bk[k] * np.sin(k*omega*t)\n",
    "    return Fout\n",
    "\n",
    "myDFT(t,y)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 3\n",
    "\n",
    "Use the two windowing functions from Part 1 (separately) on the sawtooth function from Part 2.  Determine and print the coefficients and plot the figures.\n",
    "\n",
    "**Question: Which windowing function seems to work best?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 4\n",
    "\n",
    "Create a function $cDFT(t, y)$ that calculates and prints the $c_k$ coefficients using the complex form for discrete Fourier transforms. Be sure to comment on the format of the output array.  Once found, plot the absolute value of the coefficients against the \"frequencies\" $k \\omega$ of the Fourier transform.  Note, there are no negative frequencies, but it is sometimes useful to plot them for visual analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Acknowledgements\n",
    "\n",
    "Please comment on any help that you received from your group members or others concerning this Lab assignment."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
